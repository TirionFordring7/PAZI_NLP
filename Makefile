# Имя целевого бинарника
TARGET = pazi.out

# Параметры компиляции
CXX      = g++
CXXFLAGS = -Ofast -march=native -fopenmp

# Название архива GMP и директории, в которую он распакуется
GMP_ARCHIVE = gmp-6.2.1.tar.xz
GMP_SRC_DIR = gmp-6.2.1

.PHONY: all clean

# ---------------------------------------------------
# Цель "all": собрать программу, а затем запустить её
# ---------------------------------------------------
all: $(TARGET)
	@echo
	@echo "=== Запускаем ./$(TARGET) ==="
    LD_LIBRARY_PATH=$(GMP_SRC_DIR)/.libs:$$LD_LIBRARY_PATH ./$(TARGET)


# ------------------------------------------------------------------------
# Проверяем, есть ли директория gmp-6.2.1; если нет — распаковываем архив
# ------------------------------------------------------------------------
$(GMP_SRC_DIR):
	tar -xf $(GMP_ARCHIVE)

# ------------------------------------------------------------------------
# Конфигурируем GMP (создаём config.status как «маяк», что конфигурация ОК)
# ------------------------------------------------------------------------
$(GMP_SRC_DIR)/config.status: | $(GMP_SRC_DIR)
	cd $(GMP_SRC_DIR) && ./configure --enable-cxx

# ------------------------------------------------------------------------
# Собираем GMP (libgmpxx.la будет «маяком», что сборка завершилась)
# ------------------------------------------------------------------------
$(GMP_SRC_DIR)/libgmpxx.la: $(GMP_SRC_DIR)/config.status
	$(MAKE) -C $(GMP_SRC_DIR)

# ------------------------------------------------------------------------
# Собираем наш pazi.out, линкуем с уже собранными библиотеками GMP
# ------------------------------------------------------------------------
$(CXX) $(CXXFLAGS) pazi.cpp \
    -I $(GMP_SRC_DIR) -L $(GMP_SRC_DIR)/.libs \
    -lgmpxx -lgmp \
    -o $(TARGET) \
    -Wl,-rpath,$(GMP_SRC_DIR)/.libs


# ------------------------------------------------------------------------
# make clean: почистить сборку
# ------------------------------------------------------------------------
clean:
	$(MAKE) -C $(GMP_SRC_DIR) clean || true
	rm -f $(TARGET)

